{
  "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gamename",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "month",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seatnumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketprice",
          "type": "uint256"
        }
      ],
      "name": "addtickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gamename",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            }
          ],
          "internalType": "struct Tickets.time",
          "name": "t",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "seatnumber",
          "type": "uint256"
        }
      ],
      "name": "buytickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "gamename",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "day",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            }
          ],
          "internalType": "struct Tickets.Ticket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "month",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        }
      ],
      "name": "showallticketsoftheday",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "gamename",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "day",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            }
          ],
          "internalType": "struct Tickets.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3fe8b9da84441f0cd5360583017368e330875068b869f51091f53ca1f7546f13",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
    "transactionIndex": 0,
    "gasUsed": "1291918",
    "logsBloom": "0x
    "blockHash": "0xcdf8a1947884c783591217bd40a4d61a85b5452239a62398079c6427d1d65168",
    "transactionHash": "0x3fe8b9da84441f0cd5360583017368e330875068b869f51091f53ca1f7546f13",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10,
        "transactionHash": "0x3fe8b9da84441f0cd5360583017368e330875068b869f51091f53ca1f7546f13",
        "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xcdf8a1947884c783591217bd40a4d61a85b5452239a62398079c6427d1d65168"
      }
    ],
    "blockNumber": 10,
    "cumulativeGasUsed": "1291918",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3d6996adf9e43c5beb49940af35fedd1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatnumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketprice\",\"type\":\"uint256\"}],\"name\":\"addtickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"internalType\":\"struct Tickets.time\",\"name\":\"t\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"seatnumber\",\"type\":\"uint256\"}],\"name\":\"buytickets\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"internalType\":\"struct Tickets.Ticket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"name\":\"showallticketsoftheday\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"internalType\":\"struct Tickets.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tickets.sol\":\"Tickets\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Tickets.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Tickets is Ownable \\r\\n{\\r\\n    uint256 private numberOfgames;    \\r\\n    struct Ticket\\r\\n    {\\r\\n        string gamename;\\r\\n        uint256 seatNumber;\\r\\n        uint256 ticketPrice;\\r\\n        uint256 day;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n    }\\r\\n    \\r\\n    struct Game\\r\\n    {\\r\\n        string gamename;\\r\\n        uint256 numberOfTickets;\\r\\n        uint256 date;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n        mapping(uint => uint) tickets; //seatnumber to ticketprice\\r\\n    }\\r\\n    // Ticket[] private tickets;\\r\\n    // mapping(Game => uint) public gameticket;\\r\\n    // mapping(uint => Game) public gameticket;\\r\\n    // mapping(Game => tickets) public gametickets;\\r\\n    // Game[] private games;\\r\\n    \\r\\n    struct time\\r\\n    {\\r\\n        uint256 date;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n    }\\r\\n    mapping(uint256 => mapping(uint256 => mapping(uint256 =>mapping(string => Game) ))) private games;\\r\\n    //year->month->date->gamename\\r\\n    mapping(uint256 => mapping(uint256 => mapping(uint256 =>Ticket[]))) private ticketsoftheday;\\r\\n    function buytickets(string memory gamename,time memory t,uint256 seatnumber) public payable returns(Ticket memory)\\r\\n    {\\r\\n        Game storage g = games[t.year][t.month][t.date][gamename];\\r\\n        require(g.numberOfTickets>0,'No tickets left');\\r\\n        require(g.tickets[seatnumber] >0,'This seat is not for sale');\\r\\n        require(msg.value == g.tickets[seatnumber],'Amount is not equal to ticket price');\\r\\n        g.tickets[seatnumber] = 0;\\r\\n        g.numberOfTickets--;\\r\\n        Ticket memory tt = Ticket(g.gamename,seatnumber,g.tickets[seatnumber],g.date,g.month,g.year);\\r\\n        // ticketsoftheday[t.year][t.month][t.date].push(tt);\\r\\n        return tt;\\r\\n    }\\r\\n    \\r\\n    // function showtickets(string memory gamename,uint256 date,uint256 month, uint256 year) public view returns(Ticket[] memory)\\r\\n    // {\\r\\n    //     Game storage g = games[year][month][date][gamename];\\r\\n    //     Ticket[] memory t;\\r\\n\\r\\n    // }\\r\\n    \\r\\n    function addtickets(string memory gamename,uint256 date,uint256 month, uint256 year,uint256 seatnumber, uint256 ticketprice) public onlyOwner\\r\\n    {\\r\\n        Game storage g = games[year][month][date][gamename];\\r\\n        require(g.tickets[seatnumber] == 0,\\\"Ticket already present\\\");\\r\\n        // if(g.tickets[seatnumber] == 0){\\r\\n            g.numberOfTickets++;\\r\\n            Ticket memory tt = Ticket(gamename,seatnumber,ticketprice,date,month,year);\\r\\n            ticketsoftheday[year][month][date].push(tt); \\r\\n        // }\\r\\n\\r\\n        g.tickets[seatnumber]=ticketprice;\\r\\n        // tickets ticket = gametickets[g];\\r\\n        // for(int i=0;i<ticket.length;i++)\\r\\n        // {\\r\\n        //     require(ticket[i] != t,\\\"Ticket already exists\\\");            \\r\\n        // }\\r\\n        // ticket.push(t);\\r\\n        // gametickets[g] = ticket;\\r\\n        // return true;\\r\\n    }\\r\\n\\r\\n    function showallticketsoftheday(uint256 date,uint256 month, uint256 year) public view returns(Ticket[] memory)\\r\\n    {\\r\\n        return ticketsoftheday[year][month][date];\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0ee918165839239759fdc3d7d9d7a9282700e9886ef53b97421c14a47c98f1c4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116028061010d6000396000f3fe6080604052600436106100555760003560e01c806320c5fa901461005a57806345210cd614610097578063715018a6146100c75780638da5cb5b146100de578063f1b3997b14610109578063f2fde38b14610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610b13565b61015b565b60405161008e9190610d59565b60405180910390f35b6100b160048036038101906100ac9190610f19565b6102b5565b6040516100be9190611011565b60405180910390f35b3480156100d357600080fd5b506100dc610533565b005b3480156100ea57600080fd5b506100f36105bb565b6040516101009190611074565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b919061108f565b6105e4565b005b34801561013e57600080fd5b5061015960048036038101906101549190611164565b61082c565b005b60606003600083815260200190815260200160002060008481526020019081526020016000206000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102a857838290600052602060002090600602016040518060c00160405290816000820180546101e5906111c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610211906111c0565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050815260200190600101906101b2565b5050505090509392505050565b6102bd6109f0565b600060026000856040015181526020019081526020016000206000856020015181526020019081526020016000206000856000015181526020019081526020016000208560405161030e919061122e565b908152602001604051809103902090506000816001015411610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c906112a2565b60405180910390fd5b600081600501600085815260200190815260200160002054116103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b49061130e565b60405180910390fd5b806005016000848152602001908152602001600020543414610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b906113a0565b60405180910390fd5b600081600501600085815260200190815260200160002081905550806001016000815480929190610444906113ef565b919050555060006040518060c00160405280836000018054610465906111c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610491906111c0565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050505050815260200185815260200183600501600087815260200190815260200160002054815260200183600201548152602001836003015481526020018360040154815250905080925050509392505050565b61053b610924565b73ffffffffffffffffffffffffffffffffffffffff166105596105bb565b73ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690611465565b60405180910390fd5b6105b9600061092c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105ec610924565b73ffffffffffffffffffffffffffffffffffffffff1661060a6105bb565b73ffffffffffffffffffffffffffffffffffffffff1614610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790611465565b60405180910390fd5b60006002600085815260200190815260200160002060008681526020019081526020016000206000878152602001908152602001600020876040516106a5919061122e565b908152602001604051809103902090506000816005016000858152602001908152602001600020541461070d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610704906114d1565b60405180910390fd5b806001016000815480929190610722906114f1565b919050555060006040518060c00160405280898152602001858152602001848152602001888152602001878152602001868152509050600360008681526020019081526020016000206000878152602001908152602001600020600088815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000190805190602001906107d3929190610a26565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155505082826005016000868152602001908152602001600020819055505050505050505050565b610834610924565b73ffffffffffffffffffffffffffffffffffffffff166108526105bb565b73ffffffffffffffffffffffffffffffffffffffff16146108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611465565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f906115ac565b60405180910390fd5b6109218161092c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054610a32906111c0565b90600052602060002090601f016020900481019282610a545760008555610a9b565b82601f10610a6d57805160ff1916838001178555610a9b565b82800160010185558215610a9b579182015b82811115610a9a578251825591602001919060010190610a7f565b5b509050610aa89190610aac565b5090565b5b80821115610ac5576000816000905550600101610aad565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610af081610add565b8114610afb57600080fd5b50565b600081359050610b0d81610ae7565b92915050565b600080600060608486031215610b2c57610b2b610ad3565b5b6000610b3a86828701610afe565b9350506020610b4b86828701610afe565b9250506040610b5c86828701610afe565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bcc578082015181840152602081019050610bb1565b83811115610bdb576000848401525b50505050565b6000601f19601f8301169050919050565b6000610bfd82610b92565b610c078185610b9d565b9350610c17818560208601610bae565b610c2081610be1565b840191505092915050565b610c3481610add565b82525050565b600060c0830160008301518482036000860152610c578282610bf2565b9150506020830151610c6c6020860182610c2b565b506040830151610c7f6040860182610c2b565b506060830151610c926060860182610c2b565b506080830151610ca56080860182610c2b565b5060a0830151610cb860a0860182610c2b565b508091505092915050565b6000610ccf8383610c3a565b905092915050565b6000602082019050919050565b6000610cef82610b66565b610cf98185610b71565b935083602082028501610d0b85610b82565b8060005b85811015610d475784840389528151610d288582610cc3565b9450610d3383610cd7565b925060208a01995050600181019050610d0f565b50829750879550505050505092915050565b60006020820190508181036000830152610d738184610ce4565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dbd82610be1565b810181811067ffffffffffffffff82111715610ddc57610ddb610d85565b5b80604052505050565b6000610def610ac9565b9050610dfb8282610db4565b919050565b600067ffffffffffffffff821115610e1b57610e1a610d85565b5b610e2482610be1565b9050602081019050919050565b82818337600083830152505050565b6000610e53610e4e84610e00565b610de5565b905082815260208101848484011115610e6f57610e6e610d80565b5b610e7a848285610e31565b509392505050565b600082601f830112610e9757610e96610d7b565b5b8135610ea7848260208601610e40565b91505092915050565b600080fd5b600060608284031215610ecb57610eca610eb0565b5b610ed56060610de5565b90506000610ee584828501610afe565b6000830152506020610ef984828501610afe565b6020830152506040610f0d84828501610afe565b60408301525092915050565b600080600060a08486031215610f3257610f31610ad3565b5b600084013567ffffffffffffffff811115610f5057610f4f610ad8565b5b610f5c86828701610e82565b9350506020610f6d86828701610eb5565b9250506080610f7e86828701610afe565b9150509250925092565b600060c0830160008301518482036000860152610fa58282610bf2565b9150506020830151610fba6020860182610c2b565b506040830151610fcd6040860182610c2b565b506060830151610fe06060860182610c2b565b506080830151610ff36080860182610c2b565b5060a083015161100660a0860182610c2b565b508091505092915050565b6000602082019050818103600083015261102b8184610f88565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105e82611033565b9050919050565b61106e81611053565b82525050565b60006020820190506110896000830184611065565b92915050565b60008060008060008060c087890312156110ac576110ab610ad3565b5b600087013567ffffffffffffffff8111156110ca576110c9610ad8565b5b6110d689828a01610e82565b96505060206110e789828a01610afe565b95505060406110f889828a01610afe565b945050606061110989828a01610afe565b935050608061111a89828a01610afe565b92505060a061112b89828a01610afe565b9150509295509295509295565b61114181611053565b811461114c57600080fd5b50565b60008135905061115e81611138565b92915050565b60006020828403121561117a57611179610ad3565b5b60006111888482850161114f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111d857607f821691505b602082108114156111ec576111eb611191565b5b50919050565b600081905092915050565b600061120882610b92565b61121281856111f2565b9350611222818560208601610bae565b80840191505092915050565b600061123a82846111fd565b915081905092915050565b600082825260208201905092915050565b7f4e6f207469636b657473206c6566740000000000000000000000000000000000600082015250565b600061128c600f83611245565b915061129782611256565b602082019050919050565b600060208201905081810360008301526112bb8161127f565b9050919050565b7f546869732073656174206973206e6f7420666f722073616c6500000000000000600082015250565b60006112f8601983611245565b9150611303826112c2565b602082019050919050565b60006020820190508181036000830152611327816112eb565b9050919050565b7f416d6f756e74206973206e6f7420657175616c20746f207469636b657420707260008201527f6963650000000000000000000000000000000000000000000000000000000000602082015250565b600061138a602383611245565b91506113958261132e565b604082019050919050565b600060208201905081810360008301526113b98161137d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113fa82610add565b9150600082141561140e5761140d6113c0565b5b600182039050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061144f602083611245565b915061145a82611419565b602082019050919050565b6000602082019050818103600083015261147e81611442565b9050919050565b7f5469636b657420616c72656164792070726573656e7400000000000000000000600082015250565b60006114bb601683611245565b91506114c682611485565b602082019050919050565b600060208201905081810360008301526114ea816114ae565b9050919050565b60006114fc82610add565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561152f5761152e6113c0565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611596602683611245565b91506115a18261153a565b604082019050919050565b600060208201905081810360008301526115c581611589565b905091905056fea2646970667358221220c5c3e3a3661da47d49527988da60cbec07ae4b23d91e191a51378c0da8fe32ea64736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3418,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "numberOfgames",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3464,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "games",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage))))"
      },
      {
        "astId": 3474,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "ticketsoftheday",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Ticket)3431_storage)dyn_storage": {
        "base": "t_struct(Ticket)3431_storage",
        "encoding": "dynamic_array",
        "label": "struct Tickets.Ticket[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Tickets.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)3446_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Tickets.Ticket[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Ticket)3431_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => struct Tickets.Game))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct Tickets.Ticket[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(string => struct Tickets.Game)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Tickets.Ticket[])))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)3431_storage)dyn_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage))))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(string => struct Tickets.Game))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)3446_storage)))"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Game)3446_storage": {
        "encoding": "inplace",
        "label": "struct Tickets.Game",
        "members": [
          {
            "astId": 3433,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "gamename",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3435,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "numberOfTickets",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3437,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "date",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3439,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "month",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3441,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "year",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3445,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "tickets",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Ticket)3431_storage": {
        "encoding": "inplace",
        "label": "struct Tickets.Ticket",
        "members": [
          {
            "astId": 3420,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "gamename",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3422,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "seatNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3424,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "ticketPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3426,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "day",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3428,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "month",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3430,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "year",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}