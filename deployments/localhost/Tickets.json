{
  "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gamename",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "month",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seatnumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketprice",
          "type": "uint256"
        }
      ],
      "name": "addtickets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gamename",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            }
          ],
          "internalType": "struct Tickets.time",
          "name": "t",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "seatnumber",
          "type": "uint256"
        }
      ],
      "name": "buytickets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "gamename",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "day",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Tickets.Ticket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "month",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        }
      ],
      "name": "showallticketsoftheday",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "gamename",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "day",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "month",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Tickets.Ticket[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1be7dff25450f434d7d77fdf3925ecfdd39cbd6c1c309ce49f0cd467b66e24b8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
    "transactionIndex": 0,
    "gasUsed": "1444886",
    "logsBloom": "0x
    "blockHash": "0x6c434322851bba42c64b0d0f44e854b3d10a9e322935479903402fff89becbe1",
    "transactionHash": "0x1be7dff25450f434d7d77fdf3925ecfdd39cbd6c1c309ce49f0cd467b66e24b8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10,
        "transactionHash": "0x1be7dff25450f434d7d77fdf3925ecfdd39cbd6c1c309ce49f0cd467b66e24b8",
        "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6c434322851bba42c64b0d0f44e854b3d10a9e322935479903402fff89becbe1"
      }
    ],
    "blockNumber": 10,
    "cumulativeGasUsed": "1444886",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a7ecf661d70434d1cb163e7516581b13",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatnumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketprice\",\"type\":\"uint256\"}],\"name\":\"addtickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"internalType\":\"struct Tickets.time\",\"name\":\"t\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"seatnumber\",\"type\":\"uint256\"}],\"name\":\"buytickets\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Tickets.Ticket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"name\":\"showallticketsoftheday\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"gamename\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Tickets.Ticket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tickets.sol\":\"Tickets\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Tickets.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Tickets is Ownable \\r\\n{\\r\\n    uint256 private numberOfgames;    \\r\\n    struct Ticket\\r\\n    {\\r\\n        string gamename;\\r\\n        uint256 seatNumber;\\r\\n        uint256 ticketPrice;\\r\\n        uint256 day;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n        bool sold;\\r\\n    }\\r\\n    \\r\\n    struct Game\\r\\n    {\\r\\n        string gamename;\\r\\n        uint256 numberOfTickets;\\r\\n        uint256 date;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n        mapping(uint => uint) tickets; //seatnumber to ticketprice\\r\\n    }\\r\\n    // Ticket[] private tickets;\\r\\n    // mapping(Game => uint) public gameticket;\\r\\n    // mapping(uint => Game) public gameticket;\\r\\n    // mapping(Game => tickets) public gametickets;\\r\\n    // Game[] private games;\\r\\n    \\r\\n    struct time\\r\\n    {\\r\\n        uint256 date;\\r\\n        uint256 month;\\r\\n        uint256 year;\\r\\n    }\\r\\n    mapping(uint256 => mapping(uint256 => mapping(uint256 =>mapping(string => Game) ))) private games;\\r\\n    //year->month->date->gamename\\r\\n    mapping(uint256 => mapping(uint256 => mapping(uint256 =>Ticket[]))) private ticketsoftheday;\\r\\n    function buytickets(string memory gamename,time memory t,uint256 seatnumber) public payable returns(Ticket memory)\\r\\n    {\\r\\n        Game storage g = games[t.year][t.month][t.date][gamename];\\r\\n        require(g.numberOfTickets>0,'No tickets left');\\r\\n        require(g.tickets[seatnumber] >0,'This seat is not for sale');\\r\\n        require(msg.value == g.tickets[seatnumber],'Amount is not equal to ticket price');\\r\\n        g.tickets[seatnumber] = 0;\\r\\n        g.numberOfTickets--;\\r\\n        Ticket memory tt = Ticket(g.gamename,seatnumber,g.tickets[seatnumber],g.date,g.month,g.year,true);\\r\\n        // ticketsoftheday[t.year][t.month][t.date].push(tt);\\r\\n        return tt;\\r\\n    }\\r\\n    \\r\\n    // function showtickets(string memory gamename,uint256 date,uint256 month, uint256 year) public view returns(Ticket[] memory)\\r\\n    // {\\r\\n    //     Game storage g = games[year][month][date][gamename];\\r\\n    //     Ticket[] memory t;\\r\\n\\r\\n    // }\\r\\n    \\r\\n    function addtickets(string memory gamename,uint256 date,uint256 month, uint256 year,uint256 seatnumber, uint256 ticketprice) public onlyOwner\\r\\n    {\\r\\n        Game storage g = games[year][month][date][gamename];\\r\\n        require(g.tickets[seatnumber] == 0,\\\"Ticket already present\\\");\\r\\n        // if(g.tickets[seatnumber] == 0){\\r\\n            g.numberOfTickets++;\\r\\n            Ticket memory tt = Ticket(gamename,seatnumber,ticketprice,date,month,year,false);\\r\\n            ticketsoftheday[year][month][date].push(tt); \\r\\n        // }\\r\\n\\r\\n        g.tickets[seatnumber]=ticketprice;\\r\\n        // tickets ticket = gametickets[g];\\r\\n        // for(int i=0;i<ticket.length;i++)\\r\\n        // {\\r\\n        //     require(ticket[i] != t,\\\"Ticket already exists\\\");            \\r\\n        // }\\r\\n        // ticket.push(t);\\r\\n        // gametickets[g] = ticket;\\r\\n        // return true;\\r\\n    }\\r\\n\\r\\n    function showallticketsoftheday(uint256 date,uint256 month, uint256 year) public view returns(Ticket[] memory)\\r\\n    {\\r\\n        uint256 count=0;\\r\\n        uint256 j=0;\\r\\n        for(uint i=0;i<ticketsoftheday[year][month][date].length;i++){\\r\\n            if(ticketsoftheday[year][month][date][i].sold==false){\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        Ticket[] memory t = new Ticket[](count);\\r\\n        for(uint i=0;i<ticketsoftheday[year][month][date].length;i++){\\r\\n            if(ticketsoftheday[year][month][date][i].sold==false){                \\r\\n                t[j] = ticketsoftheday[year][month][date][i];\\r\\n                j++;\\r\\n            }\\r\\n        }\\r\\n        return t;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xfb6e2cb985b9b6d6c44cbdacb4e1da5f190008d6689dcfb1a3a7d6373c38f0f7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806320c5fa901461005a57806345210cd614610097578063715018a6146100c75780638da5cb5b146100de578063f1b3997b14610109578063f2fde38b14610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610d6b565b61015b565b60405161008e9190610fdf565b60405180910390f35b6100b160048036038101906100ac919061119f565b6104d2565b6040516100be91906112aa565b60405180910390f35b3480156100d357600080fd5b506100dc610759565b005b3480156100ea57600080fd5b506100f36107e1565b604051610100919061130d565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b9190611328565b61080a565b005b34801561013e57600080fd5b50610159600480360381019061015491906113fd565b610a7b565b005b606060008060005b6003600086815260200190815260200160002060008781526020019081526020016000206000888152602001908152602001600020805490508110156102375760001515600360008781526020019081526020016000206000888152602001908152602001600020600089815260200190815260200160002082815481106101ee576101ed61142a565b5b906000526020600020906007020160060160009054906101000a900460ff161515141561022457828061022090611488565b9350505b808061022f90611488565b915050610163565b5060008267ffffffffffffffff8111156102545761025361100b565b5b60405190808252806020026020018201604052801561028d57816020015b61027a610c3f565b8152602001906001900390816102725790505b50905060005b6003600087815260200190815260200160002060008881526020019081526020016000206000898152602001908152602001600020805490508110156104c4576000151560036000888152602001908152602001600020600089815260200190815260200160002060008a8152602001908152602001600020828154811061031e5761031d61142a565b5b906000526020600020906007020160060160009054906101000a900460ff16151514156104b1576003600087815260200190815260200160002060008881526020019081526020016000206000898152602001908152602001600020818154811061038c5761038b61142a565b5b90600052602060002090600702016040518060e00160405290816000820180546103b590611500565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190611500565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508284815181106104975761049661142a565b5b602002602001018190525082806104ad90611488565b9350505b80806104bc90611488565b915050610293565b508093505050509392505050565b6104da610c3f565b600060026000856040015181526020019081526020016000206000856020015181526020019081526020016000206000856000015181526020019081526020016000208560405161052b919061156e565b908152602001604051809103902090506000816001015411610582576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610579906115e2565b60405180910390fd5b600081600501600085815260200190815260200160002054116105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d19061164e565b60405180910390fd5b806005016000848152602001908152602001600020543414610631576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610628906116e0565b60405180910390fd5b60008160050160008581526020019081526020016000208190555080600101600081548092919061066190611700565b919050555060006040518060e0016040528083600001805461068290611500565b80601f01602080910402602001604051908101604052809291908181526020018280546106ae90611500565b80156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050815260200185815260200183600501600087815260200190815260200160002054815260200183600201548152602001836003015481526020018360040154815260200160011515815250905080925050509392505050565b610761610b73565b73ffffffffffffffffffffffffffffffffffffffff1661077f6107e1565b73ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90611776565b60405180910390fd5b6107df6000610b7b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610812610b73565b73ffffffffffffffffffffffffffffffffffffffff166108306107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90611776565b60405180910390fd5b60006002600085815260200190815260200160002060008681526020019081526020016000206000878152602001908152602001600020876040516108cb919061156e565b9081526020016040518091039020905060008160050160008581526020019081526020016000205414610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906117e2565b60405180910390fd5b80600101600081548092919061094890611488565b919050555060006040518060e0016040528089815260200185815260200184815260200188815260200187815260200186815260200160001515815250905060036000868152602001908152602001600020600087815260200190815260200160002060008881526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000019080519060200190610a02929190610c7e565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550505082826005016000868152602001908152602001600020819055505050505050505050565b610a83610b73565b73ffffffffffffffffffffffffffffffffffffffff16610aa16107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee90611776565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5e90611874565b60405180910390fd5b610b7081610b7b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060e001604052806060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b828054610c8a90611500565b90600052602060002090601f016020900481019282610cac5760008555610cf3565b82601f10610cc557805160ff1916838001178555610cf3565b82800160010185558215610cf3579182015b82811115610cf2578251825591602001919060010190610cd7565b5b509050610d009190610d04565b5090565b5b80821115610d1d576000816000905550600101610d05565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d4881610d35565b8114610d5357600080fd5b50565b600081359050610d6581610d3f565b92915050565b600080600060608486031215610d8457610d83610d2b565b5b6000610d9286828701610d56565b9350506020610da386828701610d56565b9250506040610db486828701610d56565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e24578082015181840152602081019050610e09565b83811115610e33576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e5582610dea565b610e5f8185610df5565b9350610e6f818560208601610e06565b610e7881610e39565b840191505092915050565b610e8c81610d35565b82525050565b60008115159050919050565b610ea781610e92565b82525050565b600060e0830160008301518482036000860152610eca8282610e4a565b9150506020830151610edf6020860182610e83565b506040830151610ef26040860182610e83565b506060830151610f056060860182610e83565b506080830151610f186080860182610e83565b5060a0830151610f2b60a0860182610e83565b5060c0830151610f3e60c0860182610e9e565b508091505092915050565b6000610f558383610ead565b905092915050565b6000602082019050919050565b6000610f7582610dbe565b610f7f8185610dc9565b935083602082028501610f9185610dda565b8060005b85811015610fcd5784840389528151610fae8582610f49565b9450610fb983610f5d565b925060208a01995050600181019050610f95565b50829750879550505050505092915050565b60006020820190508181036000830152610ff98184610f6a565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104382610e39565b810181811067ffffffffffffffff821117156110625761106161100b565b5b80604052505050565b6000611075610d21565b9050611081828261103a565b919050565b600067ffffffffffffffff8211156110a1576110a061100b565b5b6110aa82610e39565b9050602081019050919050565b82818337600083830152505050565b60006110d96110d484611086565b61106b565b9050828152602081018484840111156110f5576110f4611006565b5b6111008482856110b7565b509392505050565b600082601f83011261111d5761111c611001565b5b813561112d8482602086016110c6565b91505092915050565b600080fd5b60006060828403121561115157611150611136565b5b61115b606061106b565b9050600061116b84828501610d56565b600083015250602061117f84828501610d56565b602083015250604061119384828501610d56565b60408301525092915050565b600080600060a084860312156111b8576111b7610d2b565b5b600084013567ffffffffffffffff8111156111d6576111d5610d30565b5b6111e286828701611108565b93505060206111f38682870161113b565b925050608061120486828701610d56565b9150509250925092565b600060e083016000830151848203600086015261122b8282610e4a565b91505060208301516112406020860182610e83565b5060408301516112536040860182610e83565b5060608301516112666060860182610e83565b5060808301516112796080860182610e83565b5060a083015161128c60a0860182610e83565b5060c083015161129f60c0860182610e9e565b508091505092915050565b600060208201905081810360008301526112c4818461120e565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112f7826112cc565b9050919050565b611307816112ec565b82525050565b600060208201905061132260008301846112fe565b92915050565b60008060008060008060c0878903121561134557611344610d2b565b5b600087013567ffffffffffffffff81111561136357611362610d30565b5b61136f89828a01611108565b965050602061138089828a01610d56565b955050604061139189828a01610d56565b94505060606113a289828a01610d56565b93505060806113b389828a01610d56565b92505060a06113c489828a01610d56565b9150509295509295509295565b6113da816112ec565b81146113e557600080fd5b50565b6000813590506113f7816113d1565b92915050565b60006020828403121561141357611412610d2b565b5b6000611421848285016113e8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061149382610d35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114c6576114c5611459565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061151857607f821691505b6020821081141561152c5761152b6114d1565b5b50919050565b600081905092915050565b600061154882610dea565b6115528185611532565b9350611562818560208601610e06565b80840191505092915050565b600061157a828461153d565b915081905092915050565b600082825260208201905092915050565b7f4e6f207469636b657473206c6566740000000000000000000000000000000000600082015250565b60006115cc600f83611585565b91506115d782611596565b602082019050919050565b600060208201905081810360008301526115fb816115bf565b9050919050565b7f546869732073656174206973206e6f7420666f722073616c6500000000000000600082015250565b6000611638601983611585565b915061164382611602565b602082019050919050565b600060208201905081810360008301526116678161162b565b9050919050565b7f416d6f756e74206973206e6f7420657175616c20746f207469636b657420707260008201527f6963650000000000000000000000000000000000000000000000000000000000602082015250565b60006116ca602383611585565b91506116d58261166e565b604082019050919050565b600060208201905081810360008301526116f9816116bd565b9050919050565b600061170b82610d35565b9150600082141561171f5761171e611459565b5b600182039050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611760602083611585565b915061176b8261172a565b602082019050919050565b6000602082019050818103600083015261178f81611753565b9050919050565b7f5469636b657420616c72656164792070726573656e7400000000000000000000600082015250565b60006117cc601683611585565b91506117d782611796565b602082019050919050565b600060208201905081810360008301526117fb816117bf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061185e602683611585565b915061186982611802565b604082019050919050565b6000602082019050818103600083015261188d81611851565b905091905056fea264697066735822122046030a726be97904f3363de925ef82be995bb75f1c701ed16b7d7c3a5771eb0364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 389,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7109,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "numberOfgames",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7157,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "games",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage))))"
      },
      {
        "astId": 7167,
        "contract": "contracts/Tickets.sol:Tickets",
        "label": "ticketsoftheday",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Ticket)7124_storage)dyn_storage": {
        "base": "t_struct(Ticket)7124_storage",
        "encoding": "dynamic_array",
        "label": "struct Tickets.Ticket[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Tickets.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)7139_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Tickets.Ticket[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Ticket)7124_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => struct Tickets.Game))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct Tickets.Ticket[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(string => struct Tickets.Game)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Tickets.Ticket[])))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Ticket)7124_storage)dyn_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage))))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(string => struct Tickets.Game))))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Game)7139_storage)))"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Game)7139_storage": {
        "encoding": "inplace",
        "label": "struct Tickets.Game",
        "members": [
          {
            "astId": 7126,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "gamename",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7128,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "numberOfTickets",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7130,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "date",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7132,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "month",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7134,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "year",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7138,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "tickets",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Ticket)7124_storage": {
        "encoding": "inplace",
        "label": "struct Tickets.Ticket",
        "members": [
          {
            "astId": 7111,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "gamename",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7113,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "seatNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7115,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "ticketPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7117,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "day",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7119,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "month",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7121,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "year",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 7123,
            "contract": "contracts/Tickets.sol:Tickets",
            "label": "sold",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}